@using CourseMate.Models
@using CourseMate.Models.ViewModels
@model CommentViewModel

@{
    var comment = Model.Comment;
    var depth = Model.Depth;
    var replyCount = comment.Replies.Count;
}

<div class="comment @(depth > 0 ? "nested-comment" : "")">
    <div class="comment-header">
        <div class="user-avatar">
            @((comment.IsAnonymous ? "A" : comment.User?.FullName?[0].ToString() ?? "U"))
        </div>
        <div class="comment-meta">
            <div class="username">@(comment.IsAnonymous ? "Anonymous" : comment.User?.FullName ?? "Unknown User")</div>
            <div class="datetime">@comment.CreatedAt.ToString("g")</div>
        </div>
    </div>

    <div class="comment-content">
        @comment.Content
    </div>

    <div class="comment-actions">
        <button class="action-btn" onclick="toggleReplyForm('@comment.Id')">
            <i>↩</i> Reply
        </button>

        <div class="vote-count-comment">
    <form asp-controller="Vote" asp-action="Vote" method="post" style="display: inline;">
        <input type="hidden" name="id" value="@comment.Id" />
        <input type="hidden" name="votableType" value="Comment" />
        <button type="submit" name="value" value="1" 
            class="vote-arrow @(Model.CurrentUserVote == 1 ? "upvoted" : "")"
            @(comment.UserId == Model.CurrentUserId ? "disabled" : "")>↑</button>
    </form>
    <span>@comment.Upvotes</span>

    <form asp-controller="Vote" asp-action="Vote" method="post" style="display: inline;">
        <input type="hidden" name="id" value="@comment.Id" />
        <input type="hidden" name="votableType" value="Comment" />
        <button type="submit" name="value" value="-1" 
            class="vote-arrow @(Model.CurrentUserVote == -1 ? "downvoted" : "")"
            @(comment.UserId == Model.CurrentUserId ? "disabled" : "")>↓</button>
    </form>
    <span>@comment.Downvotes</span>
</div>
    </div>

    <!-- Reply Form (initially hidden) -->
    <div class="reply-form" id="reply-form-@comment.Id">
        <form asp-action="AddComment" method="post">
            <input type="hidden" name="postId" value="@Model.PostId" />
            <input type="hidden" name="parentId" value="@comment.Id" />
            <textarea name="content" required placeholder="Write your reply here..."></textarea>
            <div class="form-actions">
                @* <div class="anonymous-checkbox">
                    <input type="checkbox" id="IsAnonymous@(comment.Id)" name="isAnonymous" />
                    <label for="IsAnonymous@(comment.Id)">Post as Anonymous</label>
                </div> *@
                <button type="submit" class="btn-submit">Post Reply</button>
            </div>
        </form>
    </div>

    <!-- Replies -->
    @if (comment.Replies.Any())
    {
        <button class="comment-collapse-btn" onclick="toggleReplies(this, '@comment.Id')" data-reply-count="@replyCount">
            <span>Hide replies (@replyCount)</span>
        </button>

        <div class="comment-replies" id="replies-@comment.Id">
            @foreach (var reply in comment.Replies)
            {
                @await Html.PartialAsync("_Comment", new CommentViewModel {
                Comment = reply,
                CurrentUserId = Model.CurrentUserId,
                PostId = Model.PostId,
                Depth = depth + 1
                })
                }
    </div>
        }
</div>