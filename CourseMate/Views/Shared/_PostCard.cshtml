@model CourseMate.Models.Post

<div class="reddit-post-card mb-3">
  <!-- Vote Section -->
  <div class="vote-section">
    <div class="vote-container">
      <button class="vote-btn vote-up" title="Upvote">
        <i class="fas fa-arrow-up"></i>
      </button>
      <div class="vote-score">
        @{
          var upvotes = Model.Votes?.Count(v => v.Value == 1) ?? 0;
          var downvotes = Model.Votes?.Count(v => v.Value == -1) ?? 0;
          var netScore = upvotes - downvotes;
        }
        @netScore
      </div>
      <button class="vote-btn vote-down" title="Downvote">
        <i class="fas fa-arrow-down"></i>
      </button>
    </div>
  </div>

  <!-- Content Section -->
  <div class="content-section">
    <!-- Post Meta Info -->
    <div class="post-meta">
      <!-- Course Tags -->
      @if (Model.Tags?.Any() == true)
      {
        @foreach (var tag in Model.Tags)
        {
          <span class="course-tag">r/@tag.CourseCode</span>
        }
      }

      <span class="meta-separator">•</span>
      <span class="post-time">Posted by</span>

      @if (Model.IsAnonymous)
      {
        <span class="username">u/Anonymous</span>
      }
      else
      {
        <span class="username">u/@Model.User?.UserName</span>
      }

      <span class="meta-separator">•</span>
      @* <span class="post-time">@Model.CreatedAt?.ToString("MMM dd")</span> *@
    </div>

    <!-- Post Title -->
    <h3 class="post-title">
      <a asp-controller="Post" asp-action="Details" asp-route-id="@Model.Id" class="title-link">
        @Model.Title
      </a>
    </h3>

    <!-- Post Preview Content (if available) -->
    @if (!string.IsNullOrEmpty(Model.Content))
    {
      <div class="post-preview">
        @(Model.Content.Length > 200 ? Model.Content.Substring(0, 200) + "..." : Model.Content)
      </div>
    }

    <!-- Action Bar -->
    <div class="action-bar">
      <a asp-controller="Post" asp-action="Details" asp-route-id="@Model.Id" class="action-btn comments-btn">
        <i class="far fa-comment-alt"></i>
        @Model.Comments?.Count() Comments
      </a>
      <button class="action-btn share-btn">
        <i class="fas fa-share"></i>
        Share
      </button>
      <button class="action-btn save-btn">
        <i class="far fa-bookmark"></i>
        Save
      </button>
      <button class="action-btn more-btn">
        <i class="fas fa-ellipsis-h"></i>
      </button>
    </div>
  </div>
</div>

<style>
  .reddit-post-card {
    display: flex;
    background: #ffffff;
    border: 1px solid #ccc;
    border-radius: 4px;
    overflow: hidden;
    transition: border-color 0.2s ease;
  }

  .reddit-post-card:hover {
    border-color: #898989;
  }

  /* Vote Section */
  .vote-section {
    background: #f8f9fa;
    padding: 8px 4px;
    display: flex;
    align-items: flex-start;
    min-width: 40px;
  }

  .vote-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2px;
  }

  .vote-btn {
    background: none;
    border: none;
    padding: 4px;
    cursor: pointer;
    border-radius: 2px;
    color: #878a8c;
    transition: all 0.2s ease;
    font-size: 16px;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .vote-btn:hover {
    background: #f6f7f8;
  }

  .vote-up:hover {
    color: #ff4500;
  }

  .vote-down:hover {
    color: #7193ff;
  }

  .vote-score {
    font-weight: 700;
    font-size: 12px;
    color: #1c1c1c;
    margin: 2px 0;
    text-align: center;
    min-width: 24px;
  }

  /* Content Section */
  .content-section {
    flex: 1;
    padding: 8px 12px;
  }

  .post-meta {
    font-size: 12px;
    color: #787c7e;
    margin-bottom: 4px;
    display: flex;
    align-items: center;
    gap: 4px;
    flex-wrap: wrap;
  }

  .course-tag {
    color: #1a73e8;
    font-weight: 700;
    text-decoration: none;
  }

  .course-tag:hover {
    text-decoration: underline;
  }

  .username {
    color: #1c1c1c;
    font-weight: 600;
  }

  .meta-separator {
    color: #787c7e;
  }

  .post-time {
    color: #787c7e;
  }

  .post-title {
    font-size: 18px;
    font-weight: 500;
    line-height: 1.3;
    margin: 4px 0 8px 0;
  }

  .title-link {
    color: #1c1c1c;
    text-decoration: none;
  }

  .title-link:hover {
    color: #1c1c1c;
    text-decoration: none;
  }

  .post-preview {
    font-size: 14px;
    color: #787c7e;
    line-height: 1.4;
    margin-bottom: 8px;
  }

  /* Action Bar */
  .action-bar {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 8px;
  }

  .action-btn {
    display: flex;
    align-items: center;
    gap: 4px;
    padding: 4px 8px;
    font-size: 12px;
    font-weight: 700;
    color: #787c7e;
    background: none;
    border: none;
    border-radius: 2px;
    cursor: pointer;
    text-decoration: none;
    transition: background-color 0.2s ease;
  }

  .action-btn:hover {
    background: #f6f7f8;
    color: #787c7e;
    text-decoration: none;
  }

  .comments-btn:hover {
    color: #1a73e8;
  }

  /* Dark theme support */
  @* @media *@
  (prefers-color-scheme: dark) {
    .reddit-post-card {
      background: #1a1a1b;
      border-color: #343536;
    }

    .reddit-post-card:hover {
      border-color: #666;
    }

    .vote-section {
      background: #161617;
    }

    .vote-score,
    .post-title .title-link,
    .username {
      color: #d7dadc;
    }

    .vote-btn:hover,
    .action-btn:hover {
      background: #272729;
    }

    .post-meta,
    .post-time,
    .post-preview,
    .action-btn {
      color: #818384;
    }
  }

  /* Responsive adjustments */
  @* @media *@
  (max-width: 768px) {
    .post-title {
      font-size: 16px;
    }

    .action-bar {
      flex-wrap: wrap;
    }
  }
</style>