@using CourseMate.Models.ViewModels
@model CourseMate.Models.Post
@{
  ViewData["Title"] = "Post Details";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
  :root {
    --bg-primary: #0a0a0a;
    --bg-secondary: rgba(18, 18, 18, 0.5);
    --bg-tertiary: #242424;
    --text-primary: #e4e6eb;
    --text-secondary: #d7dadc;
    --text-tertiary: #818384;
    --accent: #4fbcff;
    --accent-hover: #6bbdff;
    --border: #343536;
    --tag-bg: #0079d3;
    --vote-active: #ff4500;
    --username-color: #4fbcff;
    --datetime-color: #818384;
    --comment-bg: #1a1a1b;
    --comment-hover: #272729;
    --reply-bg: #1e1e1f;
  }

  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: var(--bg-primary);
    color: var(--text-primary);
  }

  .main-content {
    min-height: 100vh;
    padding: 30px 20px;
    margin-left: 130px;
    width: calc(100% - 130px);
    transition: margin-left 0.3s ease;
  }

  .container-custom {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0;
  }

  .header-custom {
    background-color: var(--bg-tertiary);
    padding: 30px 60px;
    border-radius: 12px 12px 0 0;
    margin-bottom: 30px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    width: 100%;
  }

  .header-custom h1 {
    font-size: 36px;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 12px;
    text-align: center;
  }

  .breadcrumb-custom {
    font-size: 1.1rem;
    color: var(--text-tertiary);
    text-align: center;
  }

  .breadcrumb-custom a {
    color: var(--accent);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .breadcrumb-custom a:hover {
    color: var(--accent-hover);
    text-decoration: underline;
  }

  .form-container {
    display: flex;
    flex-direction: column;
    background-color: var(--bg-tertiary);
    border-radius: 10px;
    padding: 20px 40px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    width: 100%;
    margin-top: 15px;
  }

  .post-container {
    background-color: var(--bg-secondary);
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 30px;
    transition: all 0.3s ease;
    margin-bottom: 30px;
    width: 100%;
  }

  .post-container:hover {
    background-color: rgba(26, 26, 27, 0.7);
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  }

  .post-title {
    color: var(--text-primary);
    font-size: 28px;
    margin-bottom: 14px;
    font-weight: 600;
    @* text-align: center; *@
  }

  .post-meta {
    color: var(--text-tertiary);
    margin-bottom: 20px;
    font-size: 1rem;
    @* text-align: center; *@
  }

  .post-meta .username {
    color: var(--username-color);
    font-weight: 600;
  }

  .post-meta .datetime {
    color: var(--datetime-color);
  }

  .post-content {
    color: var(--text-secondary);
    line-height: 1.8;
    margin-bottom: 25px;
    font-size: 17px;
    width: 100%;
  }

  .tags-container {
    display: flex;
    @* justify-content: center; *@
    flex-wrap: wrap;
    gap: 12px;
    margin-bottom: 25px;
  }

  .tag-item {
    background-color: rgb(204, 252, 255);
    color: #f1f1f1;
    padding: 8px 18px;
    border-radius: 16px;
    font-size: 1rem;
    font-weight: 500;
    @* text-align: center; *@
    transition: background-color 0.2s ease;
  }

  .tag-item:hover {
    background-color: var(--accent);
  }

  .vote-count {
    color: var(--text-secondary);
    font-size: 1rem;
    margin-top: 15px;
    display: flex;
    align-items: center;
    gap: 25px;
    @* justify-content: center; *@
  }

  .vote-group {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .vote-arrow {
    cursor: pointer;
    font-size: 22px;
    font-weight: bold;
    color: var(--text-tertiary);
    transition: all 0.2s ease;
    background: none;
    border: none;
  }

  .vote-arrow:hover {
    color: var(--accent-hover);
  }

  .vote-arrow.upvoted {
    color: var(--vote-active);
  }

  .vote-arrow.downvoted {
    color: var(--vote-active);
  }

  .comments-section {
    background-color: var(--bg-primary);
    border-radius: 12px;
    padding: 30px;
    margin-top: 30px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    width: 100%;
  }

  .comments-section h3 {
    color: var(--text-primary);
    font-size: 24px;
    margin-bottom: 20px;
    text-align: center;
  }

  .comments-container {
    display: flex;
    flex-direction: column;
    gap: 16px;
    margin-top: 20px;
  }

  .comment {
    background-color: var(--comment-bg);
    border-radius: 8px;
    padding: 16px;
    transition: all 0.2s ease;
    border: 1px solid transparent;
  }

  .comment:hover {
    border-color: var(--border);
    background-color: var(--comment-hover);
  }

  .comment-header {
    display: flex;
    align-items: center;
    margin-bottom: 12px;
  }

  .user-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: var(--accent);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 12px;
    font-weight: bold;
    color: white;
  }

  .comment-meta {
    flex: 1;
  }

  .comment-meta .username {
    color: var(--username-color);
    font-weight: 600;
    font-size: 14px;
  }

  .comment-meta .datetime {
    color: var(--datetime-color);
    font-size: 12px;
  }

  .comment-content {
    color: var(--text-secondary);
    line-height: 1.6;
    margin-bottom: 12px;
    font-size: 15px;
  }

  .comment-actions {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .action-btn {
    display: flex;
    align-items: center;
    gap: 4px;
    background: none;
    border: none;
    color: var(--text-tertiary);
    cursor: pointer;
    font-size: 13px;
    padding: 4px 8px;
    border-radius: 4px;
    transition: all 0.2s ease;
  }

  .action-btn:hover {
    background-color: var(--bg-tertiary);
    color: var(--text-secondary);
  }

  .vote-count-comment {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    color: var(--text-tertiary);
  }

  .reply-container {
    margin-top: 12px;
    padding-left: 20px;
    border-left: 2px solid var(--border);
  }

  .comment-replies {
    margin-top: 12px;
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .reply-form {
    margin-top: 16px;
    padding: 16px;
    background-color: var(--reply-bg);
    border-radius: 8px;
    display: none;
  }

  .reply-form.active {
    display: block;
    animation: fadeIn 0.3s ease;
  }

  .comment-form-main {
    margin-top: 20px;
    margin-bottom: 30px;
    width: 100%;
  }

  .comment-form-main textarea,
  .reply-form textarea {
    width: 100%;
    padding: 12px;
    border-radius: 8px;
    border: 1px solid var(--border);
    background-color: var(--bg-secondary);
    color: var(--text-secondary);
    font-size: 14px;
    resize: vertical;
    min-height: 100px;
    margin-bottom: 12px;
    transition: border-color 0.2s ease;
  }

  .comment-form-main textarea:focus,
  .reply-form textarea:focus {
    outline: none;
    border-color: var(--accent);
  }

  .form-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .anonymous-checkbox {
    display: flex;
    align-items: center;
    gap: 8px;
    color: var(--text-secondary);
    font-size: 14px;
  }

  .btn-submit {
    background-color: var(--accent);
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .btn-submit:hover {
    background-color: var(--accent-hover);
  }

  .no-comments {
    text-align: center;
    color: var(--text-tertiary);
    padding: 30px;
    font-style: italic;
  }

  .comment-collapse-btn {
    margin-top: 8px;
    background: none;
    border: none;
    color: var(--accent);
    font-size: 13px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 4px;
  }

  .comment-collapse-btn:hover {
    text-decoration: underline;
  }

  .comment-replies.collapsed {
    display: none;
  }

  @@keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Nested comment styling */
  .nested-comment {
    margin-left: 30px;
    border-left: 2px solid var(--border);
    padding-left: 15px;
    background-color: rgba(0, 0, 0, 0.1);
  }

  .nested-comment .nested-comment {
    margin-left: 25px;
    background-color: rgba(0, 0, 0, 0.15);
  }

  .nested-comment .nested-comment .nested-comment {
    margin-left: 20px;
    background-color: rgba(0, 0, 0, 0.2);
  }

  .nested-comment .nested-comment .nested-comment .nested-comment {
    margin-left: 15px;
    background-color: rgba(0, 0, 0, 0.25);
  }

  .nested-comment .nested-comment .nested-comment .nested-comment .nested-comment {
    margin-left: 10px;
    border-left: 1px solid var(--border);
    background-color: rgba(0, 0, 0, 0.3);
  }

  @@media (max-width: 768px) {
    .main-content {
      margin-left: 0;
      width: 100%;
      padding: 15px;
    }

    .form-container {
      padding: 15px;
    }

    .header-custom {
      padding: 20px;
    }

    .nested-comment {
      margin-left: 15px;
    }

    .nested-comment .nested-comment {
      margin-left: 10px;
    }

    .nested-comment .nested-comment .nested-comment {
      margin-left: 5px;
    }
  }
</style>

<div class="main-content">
  <div class="container-custom">
    <div>
      @* <h1>Details</h1> *@
      <div class="breadcrumb-custom">
        <a asp-controller="Home" asp-action="Index">CourseMate</a> •
        <a asp-controller="Post" asp-action="Index">Posts</a> • Details
      </div>
    </div>
    <div class="form-container">
      <div class="post-container">
        <h1 class="post-title">@Model.Title</h1>
        <div class="post-meta">
          Posted by: <span class="username">@(Model.IsAnonymous ? "Anonymous" : Model.User?.FullName)</span> on <span
            class="datetime">@Model.CreatedAt.ToString("g")</span>
        </div>
        <div class="post-content">
          @Model.Content
        </div>
        <div class="tags-container">
          @foreach (var tag in Model.Tags)
          {

            <span class="tag-item">
              <a asp-controller="Post" asp-action="PostsByTag" asp-route-tagId="@tag.Id" class="course-tag">
                @tag.CourseName (@tag.CourseCode) - @tag.Varsity
              </a>
            </span>
          }
        </div>
        <!-- Update post voting forms -->
<div class="vote-count">
    <div class="vote-group">
        <form asp-controller="Vote" asp-action="Vote" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="votableType" value="Post" />
            <button type="submit" name="value" value="1" 
                class="vote-arrow @(ViewBag.UserPostVote == 1 ? "upvoted" : "")"
                @(Model.UserId == ViewBag.CurrentUserId ? "disabled" : "")>↑</button>
        </form>
        <span>@Model.Votes.Count(v => v.Value == 1)</span>
    </div>
    <div class="vote-group">
        <form asp-controller="Vote" asp-action="Vote" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="votableType" value="Post" />
            <button type="submit" name="value" value="-1" 
                class="vote-arrow @(ViewBag.UserPostVote == -1 ? "downvoted" : "")"
                @(Model.UserId == ViewBag.CurrentUserId ? "disabled" : "")>↓</button>
        </form>
        <span>@Model.Votes.Count(v => v.Value == -1)</span>
    </div>
   </div>
      </div>

      <div class="comments-section">
        <h3>Comments (@Model.Comments.Count)</h3>

        <!-- Main Comment Form at the top -->
        <div class="comment-form-main">
          <h4>Add a comment</h4>
          <form asp-action="AddComment" method="post">
            <input type="hidden" name="postId" value="@Model.Id" />
            <textarea name="content" required placeholder="Write your comment here..."></textarea>
            <div class="form-actions">
              <div class="anonymous-checkbox">
                <input type="checkbox" id="IsAnonymous" name="isAnonymous" />
                <label for="IsAnonymous">Post as Anonymous</label>
              </div>
              <button type="submit" class="btn-submit">Post Comment</button>
            </div>
          </form>
        </div>

        <div class="comments-container">
          @if (Model.Comments.Any(c => c.ParentId == null))
          {
            foreach (var comment in Model.Comments.Where(c => c.ParentId == null))
            {
              @await Html.PartialAsync("_Comment", new CommentViewModel { Comment = comment, CurrentUserId =
              ViewBag.CurrentUserId, PostId = Model.Id })
                    }
                    }
                    else
          {
            <p class="no-comments">No comments yet. Be the first to comment!</p>
          }
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function toggleReplyForm(commentId) {
    const form = document.getElementById(`reply-form-${commentId}`);
    form.classList.toggle('active');

    // Focus on the textarea when form is shown
    if (form.classList.contains('active')) {
      const textarea = form.querySelector('textarea');
      setTimeout(() => textarea.focus(), 100);
    }
  }

  function toggleReplies(button, commentId) {
    const repliesContainer = document.getElementById(`replies-${commentId}`);
    repliesContainer.classList.toggle('collapsed');

    // Update button text based on state
    const replyCount = button.getAttribute('data-reply-count');
    if (repliesContainer.classList.contains('collapsed')) {
      button.innerHTML = `<span>Show replies (${replyCount})</span>`;
    } else {
      button.innerHTML = `<span>Hide replies (${replyCount})</span>`;
    }
  }
</script>