@model IEnumerable<CourseMate.Models.Post>

<div class="container-fluid py-4">
  <div class="row justify-content-center">
    <div class="col-12">
      <div class="card border-0 shadow-sm">
        <div class="card-header bg-white border-bottom py-4">
          <h2 class="mb-0 fw-semibold text-dark">Pending Posts</h2>
        </div>

        @if (!Model.Any())
        {
          <div class="card-body text-center py-5">
            <div class="empty-state">
              <svg width="48" height="48" viewBox="0 0 24 24" fill="none" class="mb-3 text-muted">
                <path
                  d="M3 7V17C3 18.1046 3.89543 19 5 19H19C20.1046 19 21 18.1046 21 17V7M3 7L12 14L21 7M3 7L5 5H19L21 7"
                  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
              </svg>
              <h5 class="text-muted mb-1">No pending posts</h5>
              <p class="text-muted small mb-0">All posts have been reviewed</p>
            </div>
          </div>
        }
        else
        {
          <div class="card-body p-0">
            <div class="table-responsive">
              <table class="table table-hover mb-0">
                <thead class="bg-light">
                  <tr>
                    <th class="border-0 text-muted small fw-medium py-3 px-4">Title</th>
                    <th class="border-0 text-muted small fw-medium py-3 px-4">Content</th>
                    <th class="border-0 text-muted small fw-medium py-3 px-4">Tags</th>
                    <th class="border-0 text-muted small fw-medium py-3 px-4">Author</th>
                    <th class="border-0 text-muted small fw-medium py-3 px-4">Created</th>
                    <th class="border-0 text-muted small fw-medium py-3 px-4">Status</th>
                    <th class="border-0 text-muted small fw-medium py-3 px-4">Actions</th>
                  </tr>
                </thead>
                <tbody>
                  @foreach (var post in Model)
                  {
                    <tr class="border-bottom">
                      <td class="py-4 px-4">
                        <div class="fw-medium text-dark">@post.Title</div>
                      </td>
                      <td class="py-4 px-4">
                        <div class="text-muted" style="max-width: 300px; font-size: 14px; line-height: 1.4;">
                          @(post.Content.Length > 80 ? post.Content.Substring(0, 80) + "..." : post.Content)
                        </div>
                      </td>
                      <td class="py-4 px-4">
                        @if (post.Tags.Any())
                        {
                          <div class="d-flex flex-wrap gap-1">
                            @foreach (var tag in post.Tags)
                            {
                              <span class="badge bg-light text-dark border" style="font-size: 11px; font-weight: 500;">
                                @($"{tag.CourseName} ({tag.CourseCode})")
                              </span>
                            }
                          </div>
                        }
                        else
                        {
                          <span class="text-muted small">No tags</span>
                        }
                      </td>
                      <td class="py-4 px-4">
                        @if (post.IsAnonymous)
                        {
                          <span class="text-muted small">Anonymous</span>
                        }
                        else
                        {
                          <span class="text-dark small fw-medium">@post.User?.UserName</span>
                        }
                      </td>
                      <td class="py-4 px-4">
                        <span class="text-muted small">
                          @post.CreatedAt.ToLocalTime().ToString("MMM dd, HH:mm")
                        </span>
                      </td>
                      <td class="py-4 px-4">
                        <span class="badge bg-warning text-dark" style="font-size: 11px; font-weight: 500;">
                          @post.Status
                        </span>
                      </td>
                      <td class="py-4 px-4">
                        <div class="d-flex gap-2">
                          <form asp-action="UpdateStatus" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@post.Id" />
                            <input type="hidden" name="status" value="Accepted" />
                            <button type="submit" class="btn btn-sm btn-success px-3" style="font-size: 12px;">
                              Accept
                            </button>
                          </form>

                          <form asp-action="UpdateStatus" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@post.Id" />
                            <input type="hidden" name="status" value="Pending" />
                            <button type="submit" class="btn btn-sm btn-outline-secondary px-3" style="font-size: 12px;">
                              Pending
                            </button>
                          </form>

                          <form asp-action="Delete" asp-route-id="@post.Id" method="post" class="d-inline">
                            <button type="submit" class="btn btn-sm btn-outline-danger px-3" style="font-size: 12px;"
                              onclick="return confirm('Delete this post?')">
                              Delete
                            </button>
                          </form>
                        </div>
                      </td>
                    </tr>
                  }
                </tbody>
              </table>
            </div>
          </div>
        }
      </div>
    </div>
  </div>
</div>

<style>
  .card {
    border-radius: 8px;
  }

  .table-hover tbody tr:hover {
    background-color: #f8f9fa;
  }

  .btn {
    border-radius: 6px;
    font-weight: 500;
    transition: all 0.15s ease;
  }

  .btn:hover {
    transform: translateY(-1px);
  }

  .badge {
    font-weight: 500;
    border-radius: 4px;
  }

  tbody tr {
    transition: background-color 0.15s ease;
  }
</style>